# -*- coding: utf-8 -*-
"""
Created on Sat Jun  6 19:03:05 2020

@author: Rushad
"""

import numpy as np
import system

s = system.TransferFunction([9], [1,4,9])
f = system.feedback(s, H=2)

def test_param_sys():
    assert s.parameters() == {'Order': 2,'Gain': 1.0,'Natural Frequency': 3.0,'Damping Frequency': 2.23606797749979,'Damping Ratio': 0.6666666666666666,'Phase Angle': 0.8410686705679302,'Rise Time': 1.0288256019810915,'Peak Time': 1.4049629462081452,'Max Overshoot': 9.25697384487867e-123,'Settling Time': 2.102958168939603}

def resp():
    exp = np.array([0.000000000000000000e+00,1.363228105640982291e-01,4.053197430745426599e-01,6.692282750367345434e-01,8.673716448218102837e-01,9.883047390441740410e-01,1.045456580991569906e+00,1.060202736406757662e+00,1.052347846841237722e+00,1.036227015843563803e+00,1.020269655010540122e+00,1.008224023100995792e+00,1.000833420179654043e+00,9.973121428986893022e-01,9.963764502287294489e-01,9.968276008818350853e-01,9.977933836424620617e-01,9.987581025771694598e-01,9.994902964519694066e-01,9.999418930559381691e-01,1.000158785146602058e+00,1.000218047925908404e+00,1.000192228616730628e+00,1.000134389865129814e+00,1.000076075997813119e+00])
    response = s.response("step", time_period=5, ret=True)
    assert np.array_equal(response, exp)

def test_stability():
    s.stability() == 'System is Stable'
    
def test_param_feedback():
    assert f.parameters() == {'Order': 2,'Gain': 0.6666666666666666,'Natural Frequency': 3.6742346141747673,'Damping Frequency': 3.0822070014844885,'Damping Ratio': 0.5443310539518174,'Phase Angle': 0.9952048551823703,'Rise Time': 0.6963801579107615,'Peak Time': 1.019267249758599,'Max Overshoot': 2.934753093151001e-89,'Settling Time': 2.043860974423545}